ðŸ”¥ max, min, sorted, heapq â€” Drill Set

ðŸ”¹ 2. Longest string in a list (easy)
Given a list of strings, return the longest one.
["dog", "hippopotamus", "cat", "lion"]
â†’ "hippopotamus"

ðŸ”¹ 3. Smallest string alphabetically (easy)
Return the smallest string in terms of lexicographical order.
["dog", "cat", "apple", "banana"]
â†’ "apple"

ðŸ”¹ 4. Most common character in a string (easy)
Return the character that appears most frequently in the string.
"mississippi"
â†’ "i"

ðŸ”¹ 5. Sort list of strings by their length (easy)
Sort the list of strings by increasing length.
["dog", "hippo", "ant", "elephant"]
â†’ ["ant", "dog", "hippo", "elephant"]

ðŸ”¹ 6. Sort list of tuples by second value (medium)
Given a list of tuples like (name, score), sort them by score descending.
[("Alice", 80), ("Bob", 95), ("Charlie", 85)]
â†’ [("Bob", 95), ("Charlie", 85), ("Alice", 80)]

ðŸ”¹ 8. Top 3 most common elements (medium)
Given a list of values, return the 3 most common values (not counts).
["a", "b", "a", "c", "b", "a", "b", "d", "b", "c"]
â†’ ["b", "a", "c"]

ðŸ”¹ 9. Sort dict keys by value (medium)
Given a dict {word: frequency}, return a list of words sorted by frequency descending.
{"apple": 3, "banana": 5, "orange": 2}
â†’ ["banana", "apple", "orange"]

ðŸ”¹ 10. Get item with max value in nested dict (medium+)
Given a dict like {name: {score_type: score}}, find the name with highest "math" score.
{
  "Alice": {"math": 80, "english": 90},
  "Bob": {"math": 95, "english": 85},
  "Charlie": {"math": 70, "english": 100}
}
â†’ "Bob"

ðŸ”¹ 11. Sort points by distance from origin (medium)
Given list of points (x, y), sort them by distance to origin (0,0) ascending.
[(1,2), (3,4), (0,0), (-1,-1)]
â†’ [(0,0), (-1,-1), (1,2), (3,4)]

ðŸ”¹ 14. Sort words by number of vowels (hard)
Given a list of words, sort them by how many vowels they contain (descending).
["hello", "world", "aerie", "boot"]
â†’ ["aerie", "hello", "boot", "world"]
