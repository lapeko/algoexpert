âœ… 1. Check if all users are adults (lambda + all + map)
ðŸ§¾ Given a list of dicts like {"name": "Alice", "age": 25}, check if all users are at least 18 years old.

âœ… 2. Get total price with tax applied only to certain products (map + filter + reduce)
ðŸ§¾ Given a list of {"name": ..., "price": ..., "taxable": True/False},
calculate total cost including tax (assume 10%) only for taxable items.

âœ… 3. Find most common pair of letters (Counter + map + zip)
ðŸ§¾ Given a list of strings, count all pairs of adjacent letters (bigrams) and return the most common one.
(e.g. "hello" has ["he", "el", "ll", "lo"])
Use Counter and friends.

âœ… 4. Sum of even-indexed elements > odd-indexed elements? (zip + map + reduce + all/any)
ðŸ§¾ Given a list of integers, return True if the sum of even-indexed elements is greater than the sum of odd-indexed.

âœ… 5. Get top N longest words from sentence (lambda + sorted + partial + map)
ðŸ§¾ Given a sentence string and a number N, return the top N longest words (not lengths, but actual words).
(Use partial to predefine a custom sorting function)

âœ… 6. Group users by first letter of name (groupby + map + lambda + Counter)
ðŸ§¾ Given a list of usernames, group them by the first letter, and count how many in each group.

âœ… 7. Find product with highest price-to-weight ratio (zip + map + reduce + lambda)
ðŸ§¾ Given two lists â€” prices = [10, 20, 30] and weights = [2, 5, 6],
find the item with the highest price/weight ratio.

âœ… 8. Do all strings contain vowels? (all + filter + map + lambda)
ðŸ§¾ Given a list of words, return True if every word contains at least one vowel.

âœ… 9. Build a frequency string from input (Counter + map + lambda)
ðŸ§¾ Given a string "aabccc", return "a:2, b:1, c:3" as a single formatted string.

âœ… 10. Custom key extractor using partial (partial + map + lambda)
ðŸ§¾ Create a partially applied function that extracts a certain key from dicts
and use it with map to transform a list of dicts.